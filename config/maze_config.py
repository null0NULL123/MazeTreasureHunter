from typing import List, Tuple
import os

class MazeConfig:
    """迷宫配置类，管理迷宫相关设置"""
    
    def __init__(self, maze_file: str = "maze.txt") -> None:
        """
        初始化迷宫配置
        
        Args:
            maze_file: 迷宫地图文件路径
        """
        self.maze_file: str = maze_file
        
        # 宝藏位置配置
        self.treasure_sets: List[List[Tuple[int, int]]] = [
            [(2, 2), (2, 9), (3, 4), (4, 8), (5, 1), (6, 5), (7, 0), (7, 7)],
            [(1, 8), (2, 9), (3, 0), (3, 4), (6, 5), (6, 9), (7, 0), (8, 1)],
            [(1, 8), (2, 2), (3, 4), (4, 8), (5, 1), (6, 5), (7, 7), (8, 1)],
            [(1, 8), (2, 2), (2, 9), (3, 4), (6, 5), (7, 0), (7, 7), (8, 1)],
            [(2, 9), (3, 0), (3, 4), (4, 8), (5, 1), (6, 5), (6, 9), (7, 0)],
            [(1, 8), (2, 2), (2, 9), (3, 0), (6, 9), (7, 0), (7, 7), (8, 1)],
            [(2, 2), (2, 9), (3, 0), (4, 8), (5, 1), (6, 9), (7, 0), (7, 7)],
            [(1, 8), (3, 0), (3, 4), (4, 8), (5, 1), (6, 5), (6, 9), (8, 1)],
            [(1, 8), (2, 2), (3, 0), (4, 8), (5, 1), (6, 9), (7, 7), (8, 1)],
        ]
        
        # 所有可能的宝藏位置
        self.treasure_positions: List[Tuple[int, int]] = [
            (0, 2), (0, 4), (0, 5), (0, 9), (1, 3), (1, 6), (1, 7), (1, 8),
            (2, 2), (2, 5), (2, 8), (2, 9), (3, 0), (3, 3), (3, 4), (3, 8),
            (3, 9), (4, 7), (4, 8), (9, 7), (9, 5), (9, 4), (9, 0), (8, 6),
            (8, 3), (8, 2), (8, 1), (7, 7), (7, 4), (7, 1), (7, 0), (6, 9),
            (6, 6), (6, 5), (6, 1), (6, 0), (5, 2), (5, 1)
        ]
        
        # 墙壁位置配置
        self.wall_positions: List[List[int]] = [
            [0, 5], [1, 3], [1, 6], [1, 7], [2, 6], [2, 8], [3, 3], [3, 8],
            [3, 9], [9, 4], [8, 6], [8, 3], [8, 2], [7, 3], [7, 1], [6, 6],
            [6, 1], [6, 0]
        ]
        
        # 转角位置
        self.corner_positions: List[List[int]] = [
            [1, 8], [2, 2], [2, 9], [3, 0], [3, 4], [4, 8], [8, 1],
            [5, 1], [6, 5], [6, 9], [7, 0], [7, 7]
        ]
    
    def validate_config(self) -> bool:
        """验证配置是否有效"""
        # 检查迷宫文件是否存在
        if not os.path.exists(self.maze_file):
            return False
        return True
    
    def get_treasure_set(self, index: int) -> List[Tuple[int, int]]:
        """获取指定索引的宝藏集合"""
        if 0 <= index < len(self.treasure_sets):
            return self.treasure_sets[index]
        return [] 